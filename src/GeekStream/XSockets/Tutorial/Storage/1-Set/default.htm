<html>
<head>
    <title>XSockets - WeAreTheRealTimeWeb</title>
    <script src="../../Refs/Scripts/Prettify/prettify.js" type="text/javascript"></script>
    <link href="../../Refs/Css/Prettify/prettify.css" rel="stylesheet" type="text/css" />
</head>
<body onload="prettyPrint()">
    <a href="../../default.htm">Tutorial Index</a> | <a href="../../XFiddle/default.htm?example=storageset">Try this in XFiddle</a>
    <h1>
        Storage / Set (publish and subscribe)</h1>
    <ul>
        <li><a href="../1-Set/">../1-Set</a> </li>
        <li><a href="../2-Get/">../2-Get/</a> </li>
        <li><a href="../3-GetAll/">../3-GetAll/</a> </li>
        <li><a href="../4-Remove/">../4-Remove/</a> </li>
    </ul>
    <div>
        With Storage you can persist information in the server for the current connection.
        The information will live until you remove it or the server shuts down.</div>
    <div>
        <h2>
            PreConditions</h2>
        <ol>
            <li>A connection has been made and bound to the variable "ws". <a href="../../Basics/2-Connecting/">
                Connection Example</a></li>
        </ol>
        <h2>
            Code - Storage - Set</h2>
        <ol>
            <li>Create the object to store. The object have to have the signature Key/Value so that
                it can be serialized to the expected type in the server. The value how ever kan
                be anything (a string in the example).
                <pre class="prettyprint">
var myStorageObject = { Key: 'foo', Value: 'bar' };
</pre>
            </li>
            <li>Publish the object to the predefined serverside event (XSockets.Events.storage.set).
                <pre class="prettyprint">
ws.trigger(XSockets.Events.storage.set, myStorageObject);
</pre>
            </li>
        </ol>
    </div>
</body>
</html>
