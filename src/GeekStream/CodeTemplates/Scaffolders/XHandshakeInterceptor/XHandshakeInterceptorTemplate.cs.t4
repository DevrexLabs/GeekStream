<#@ Template Language="C#" HostSpecific="True" Inherits="DynamicTransform" #>
<#@ Output Extension="cs" #>
using System.ComponentModel.Composition;
using XSockets.Core.Interceptors;
using XSockets.Core.XSocket.Protocol.Interface;
using XSockets.Core.XSocket.Interceptor;
using XSockets.Core.XSocket.Interface;

namespace <#= Model.Namespace #>
{
    [Export(typeof(IHandshakeInterceptor))]
    public sealed class <#= Model.InterceptorName #> : XBaseInterceptor, IHandshakeInterceptor
    {
       public void HandshakeCompleted(IXBaseSocket socket, XSocket.Protocol.Interface.IXSocketProtocol protocol)
        {
            //Implement your interceptor stuff here...
        }

        public void HandshakeInvalid(IXBaseSocket socket, XSocket.Protocol.Interface.IXSocketProtocol protocol)
        {
            //Implement your interceptor stuff here...
        }
    }
}
